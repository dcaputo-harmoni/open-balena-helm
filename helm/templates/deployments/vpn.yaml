apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openbalena.fullname" . }}-vpn
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openbalena.labels" . | nindent 4 }}
    app.kubernetes.io/component: vpn

    {{- with .Values.vpn.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.vpn.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.vpn.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  replicas: {{ .Values.vpn.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "openbalena.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: vpn

      {{- with .Values.vpn.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "openbalena.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: vpn

        {{- with .Values.vpn.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
      - name: wait-for-promtail
        image: busybox:latest
        command:
        - /bin/sh
        - -c
        - >
          until nc -vz {{ .Values.global.promtail.server }} {{ .Values.global.promtail.port }};
            do echo "Waiting for {{ .Values.global.promtail.server }}:{{ .Values.global.promtail.port }}";
            sleep 1;
          done
      containers:
      - name: {{ .Chart.Name }}-vpn
        image: {{ .Values.vpn.image.repository }}:{{ .Values.vpn.image.tag }}
        imagePullPolicy: {{ .Values.vpn.image.pullPolicy }}
        {{- with .Values.vpn.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - name: vpn
          containerPort: 443
        - name: tunnel
          containerPort: 3128
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN", "SYS_RESOURCE", "NET_ADMIN"]
        env:
        - name: BALENA_TLD
          value: "{{ .Values.global.hostname }}"
        - name: API_SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: openbalena-vpn-api-keys
              key: api
        - name: API_HOST
          value: "api.{{ .Values.global.hostname }}"
        - name: VPN_PORT
          value: "443"
        - name: PRODUCTION_MODE
          value: "{{ index .Values "global" "production-mode" }}"
        - name: VPN_GATEWAY
          value: "10.2.0.1"
        - name: SENTRY_DSN
          value: "{{ index .Values "vpn" "sentry-dsn" }}"
        - name: VPN_INSTANCE_COUNT
          value: "{{ index .Values "vpn" "instanceCount" }}"
        - name: VPN_HAPROXY_USEPROXYPROTOCOL
          value: "false"
        - name: VPN_SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: openbalena-api-keys
              key: vpn

        # Use the 'eth0' interface, so the VPN will register itself via the Cluster IP of the pod
        - name: VPN_SERVICE_REGISTER_INTERFACE
          value: "eth0"
        volumeMounts:
        - mountPath: /run
          name: run
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /etc/podinfo
          name: podinfo
        - mountPath: /certs/root
          name: cert-root
        - mountPath: /certs/vpn
          name: cert-vpn
        - mountPath: /certs/vpn-dhparams
          name: cert-vpn-dhparams
        - mountPath: /certs/api
          name: cert-api
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  mkdir /balena;
                  touch /balena/{{ .Values.global.hostname }}.env;
                  mkdir /certs/private;
                  ln -s /certs/vpn/issuing_ca /certs/ca-bundle.pem;
                  ln -s /certs/vpn/certificate /certs/private/vpn.{{ .Values.global.hostname }}.pem;
                  ln -s /certs/vpn/private_key /certs/private/vpn.{{ .Values.global.hostname }}.key;
                  ln -s /certs/vpn-dhparams/dhparams /certs/private/dhparam.{{ .Values.global.hostname }}.pem;
                  ln -s /certs/api/certificate /certs/private/api.{{ .Values.global.hostname }}.pem;
                  ln -s /certs/api/private_key /certs/private/api.{{ .Values.global.hostname }}.key;
                  openssl ec -pubout -outform der -in /certs/api/private_key | sha256sum | head -c 60 | xxd -r -p | base32 | fold -w4 | paste -sd : | tr -d '\n' > /certs/private/api.{{ .Values.global.hostname }}.kid;
                  if test "{{ .Values.global.promtail.server }}"; then echo 'module(load="imjournal")\nmodule(load="mmjsonparse")\n$imjournalRatelimitInterval 0\n$imjournalRatelimitBurst 0\n*.* action(type="omfwd" Target="{{ .Values.global.promtail.server }}" Port="{{ .Values.global.promtail.port }}" Protocol="tcp" Template="RSYSLOG_SyslogProtocol23Format" TCP_Framing="octet-counted")' > /etc/rsyslog.d/00-promtail-relay.conf; fi;
      volumes:
      - name: run
        emptyDir:
          medium: Memory
      - name: cgroup
        emptyDir:
          medium: Memory
      - name: cert-root
        secret:
          secretName: openbalena-pki-root
      - name: cert-vpn
        secret:
          secretName: openbalena-pki-vpn
      - name: cert-vpn-dhparams
        secret:
          secretName: openbalena-vpn-dhparams
      - name: cert-api
        secret:
          secretName: openbalena-pki-api
      - name: podinfo
        downwardAPI:
          items:
          - path: "cpu_request"
            resourceFieldRef:
              containerName: {{ .Chart.Name }}-vpn
              resource: requests.cpu

      {{- with .Values.vpn.nodeSelector  }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.vpn.tolerations .Values.global.tolerations }}
      tolerations:
        {{- if .Values.vpn.tolerations }}
        {{- toYaml .Values.vpn.tolerations | nindent 8 }}
        {{- end }}
        {{- if .Values.global.tolerations }}
        {{- toYaml .Values.global.tolerations | nindent 8 }}
        {{- end }}
      {{- end }}
