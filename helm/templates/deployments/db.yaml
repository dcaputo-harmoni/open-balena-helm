apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openbalena.fullname" . }}-db
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openbalena.labels" . | nindent 4 }}
    app.kubernetes.io/component: db

    {{- with .Values.db.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.db.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.db.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openbalena.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: db

      {{- with .Values.db.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  replicas: {{ .Values.db.replicas }}
  template:
    metadata:
      labels:
        {{- include "openbalena.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: db

        {{- with .Values.db.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}-db
        image: {{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}
        imagePullPolicy: {{ .Values.db.image.pullPolicy }}
        {{- with .Values.db.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN", "SYS_RESOURCE"]
        env:
        - name: POSTGRES_USER
          value: "{{ .Values.global.db.user }}"
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.global.db.password }}"

        volumeMounts:
        - mountPath: /run
          name: run
        - mountPath: /sys/fs/cgroup
          name: cgroup
      volumes:
      - name: run
        emptyDir:
          medium: Memory
      - name: cgroup
        emptyDir:
          medium: Memory

      {{- with .Values.db.nodeSelector  }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
