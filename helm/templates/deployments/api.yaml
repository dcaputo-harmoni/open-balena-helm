apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openbalena.fullname" . }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openbalena.labels" . | nindent 4 }}
    app.kubernetes.io/component: api

    {{- with .Values.api.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.api.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.api.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openbalena.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api

      {{- with .Values.api.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  replicas: {{ .Values.api.replicas }}
  template:
    metadata:
      labels:
        {{- include "openbalena.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api

        {{- with .Values.api.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
      - name: generate-api-kid
        image: ubuntu:22.04
        volumeMounts:
        - mountPath: /cert-api
          name: cert-api
        - mountPath: /cert-api-kid
          name: cert-api-kid
        command:
        - /bin/bash
        - -c
        - >
          apt-get update && apt-get install -y openssl xxd;
          openssl ec -pubout -outform der -in /cert-api/private_key | sha256sum | head -c 60 | xxd -r -p | base32 | fold -w4 | paste -sd : | tr -d '\n' > /cert-api-kid/api_kid
      - name: wait-for-db
        image: postgres:12
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: openbalena-db-creds
              key: username
        command:
        - /bin/sh
        - -c
        - >
          until /usr/lib/postgresql/12/bin/pg_isready -h openbalena-db -p 5432 -U $DB_USER -d resin -q; do
            echo "Waiting for openbalena-db...";
            sleep 5;
          done
      - name: wait-for-loki-write
        image: busybox:latest
        command:
        - /bin/sh
        - -c
        - >
          until nc -vz {{ .Values.api.lokiHost }} {{ .Values.api.lokiPort }};
            do echo "Waiting for {{ .Values.api.lokiHost }}:{{ .Values.api.lokiPort }}";
            sleep 1;
          done
      - name: wait-for-promtail
        image: busybox:latest
        command:
        - /bin/sh
        - -c
        - >
          until nc -vz {{ .Values.global.promtail.server }} {{ .Values.global.promtail.port }};
            do echo "Waiting for {{ .Values.global.promtail.server }}:{{ .Values.global.promtail.port }}";
            sleep 1;
          done
      containers:
      - name: {{ .Chart.Name }}-api
        image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        {{- with .Values.api.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
          - name: http
            containerPort: 80
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN", "SYS_RESOURCE"]
        env:
        - name: CONFD_BACKEND
          value: "ENV"
        - name: BALENA_TLD
          value: "{{ .Values.global.hostname }}"
        - name: TRUST_PROXY
          value: "true"
        - name: API_VPN_SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: openbalena-vpn-api-keys
              key: api
        - name: COOKIE_SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: openbalena-api-cookie-session
              key: secret
        - name: DB_HOST
          value: "openbalena-db"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openbalena-db-creds
              key: password
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: openbalena-db-creds
              key: username
        - name: DELTA_HOST
          value: "delta.{{ .Values.global.hostname }}"
        - name: DEVICE_CONFIG_SSH_AUTHORIZED_KEYS
          valueFrom:
            secretKeyRef:
              name: openbalena-ssh
              key: authorized-keys
        - name: HOST
          value: "api.{{ .Values.global.hostname }}"
        - name: IMAGE_STORAGE_ENDPOINT
          value: "s3.{{ .Values.global.hostname }}"
        - name: IMAGE_STORAGE_BUCKET
          value: "{{ index .Values "global" "s3" "imageBucket" }}"
        - name: IMAGE_STORAGE_PREFIX
          value: "{{ index .Values "global" "s3" "imageStoragePrefix" }}"
        - name: IMAGE_STORAGE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: openbalena-s3-keys
              key: access-key
        - name: IMAGE_STORAGE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: openbalena-s3-keys
              key: secret-key
        - name: IMAGE_STORAGE_FORCE_PATH_STYLE
          value: "true"
        - name: JSON_WEB_TOKEN_EXPIRY_MINUTES
          value: "10080"
        - name: JSON_WEB_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: openbalena-api-jwt-auth
              key: secret
        - name: MAX_CONNECTIONS
          value: "1000"
        - name: METRICS_MAX_REPORT_INTERVAL_SECONDS
          value: "0"
        - name: MIXPANEL_TOKEN
          value: "__unused__"
        - name: PRODUCTION_MODE
          value: "{{ index .Values "global" "production-mode" }}"
        - name: PUBNUB_PUBLISH_KEY
          value: "__unused__"
        - name: PUBNUB_SUBSCRIBE_KEY
          value: "__unused__"
        - name: REDIS_HOST
          value: "{{- include "openbalena.fullname" . }}-redis:6379"
        - name: REDIS_IS_CLUSTER
          value: "false"
        - name: LOKI_HOST
          value: "{{ .Values.api.lokiHost }}"
        - name: LOKI_PORT
          value: "{{ .Values.api.lokiPort }}"
        - name: LOKI_WRITE_PCT
          value: "{{ .Values.api.lokiWritePct }}"

        {{- if .Values.api.contractsPrivateRepoOwner }}
        - name: CONTRACTS_PRIVATE_REPO_OWNER
          value: "{{ .Values.api.contractsPrivateRepoOwner }}"
        - name: CONTRACTS_PRIVATE_REPO_NAME
          value: "{{ .Values.api.contractsPrivateRepoName }}"
        - name: CONTRACTS_PRIVATE_REPO_BRANCH
          value: "{{ .Values.api.contractsPrivateRepoBranch }}"
        - name: CONTRACTS_PRIVATE_REPO_TOKEN
          valueFrom:
            secretKeyRef:
              name: openbalena-api-github-auth
              key: token
        {{- end }}

        {{- if .Values.api.contractAllowlist }}
        - name: CONTRACT_ALLOWLIST
          value: "{{ .Values.api.contractAllowlist }}"
        {{- end }}

        - name: REGISTRY2_HOST
          value: "registry.{{ .Values.global.hostname }}"
        - name: REGISTRY_HOST
          value: "registry.{{ .Values.global.hostname }}"
        - name: SENTRY_DSN
          value: "{{ index .Values "api" "sentry-dsn" }}"
        - name: TOKEN_AUTH_CERT_ISSUER
          value: "api.{{ .Values.global.hostname }}"
        - name: TOKEN_AUTH_JWT_ALGO
          value: "ES256"
        - name: TOKEN_AUTH_BUILDER_TOKEN
          valueFrom:
            secretKeyRef:
              name: openbalena-registry-api-keys
              key: builder
        - name: VPN_HOST
          value: "vpn.{{ .Values.global.hostname }}"
        - name: VPN_PORT
          value: "443"
        - name: VPN_SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: openbalena-api-keys
              key: vpn
        - name: SUPERUSER_EMAIL
          valueFrom:
            secretKeyRef:
              name: openbalena-api-creds
              key: email
        - name: SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openbalena-api-creds
              key: password
        volumeMounts:
        - mountPath: /run
          name: run
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /certs/root
          name: cert-root
        - mountPath: /certs/vpn
          name: cert-vpn
        - mountPath: /certs/vpn-dhparams
          name: cert-vpn-dhparams
        - mountPath: /certs/api
          name: cert-api
        - mountPath: /certs/api-kid
          name: cert-api-kid
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  mkdir /balena;
                  touch /balena/{{ .Values.global.hostname }}.env;
                  mkdir /certs/private;
                  ln -s /certs/vpn/issuing_ca /certs/ca-bundle.pem;
                  ln -s /certs/vpn/certificate /certs/private/vpn.{{ .Values.global.hostname }}.pem;
                  ln -s /certs/vpn/private_key /certs/private/vpn.{{ .Values.global.hostname }}.key;
                  ln -s /certs/vpn-dhparams/dhparams /certs/private/dhparam.{{ .Values.global.hostname }}.pem;
                  ln -s /certs/api/certificate /certs/private/api.{{ .Values.global.hostname }}.pem;
                  ln -s /certs/api/private_key /certs/private/api.{{ .Values.global.hostname }}.key;
                  ln -s /certs/api-kid/api_kid /certs/private/api.{{ .Values.global.hostname }}.kid;
                  echo 'module(load="imjournal")\nmodule(load="mmjsonparse")\n$imjournalRatelimitInterval 0\n$imjournalRatelimitBurst 0\n*.* action(type="omfwd" Target="openbalena-promtail-syslog" Port="1514" Protocol="tcp" Template="RSYSLOG_SyslogProtocol23Format" TCP_Framing="octet-counted")' > /etc/rsyslog.d/00-promtail-relay.conf;
                  cd /usr/src/app;
                  wget -q https://github.com/balena-io/open-balena-api/pull/1468/commits/0712973575e0ab6d54119f9c9538d473b95330f9.patch;
                  patch -p1 < 0712973575e0ab6d54119f9c9538d473b95330f9.patch;
                  wget -q https://github.com/balena-io/open-balena-api/pull/1491/commits/f5161acf0c72242a663acc0bee5216210684a542.patch;
                  patch -p1 < f5161acf0c72242a663acc0bee5216210684a542.patch;
      volumes:
      - name: run
        emptyDir:
          medium: Memory
      - name: cgroup
        emptyDir:
          medium: Memory
      - name: cert-api-kid
        emptyDir: {}
      - name: cert-root
        secret:
          secretName: openbalena-pki-root
      - name: cert-vpn
        secret:
          secretName: openbalena-pki-vpn
      - name: cert-vpn-dhparams
        secret:
          secretName: openbalena-vpn-dhparams
      - name: cert-api
        secret:
          secretName: openbalena-pki-api

      {{- with .Values.api.nodeSelector  }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
