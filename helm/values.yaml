global:
  hostname: ""
  email: ""
  password: ""
  production-mode: false
  ssh-authorized-keys: ""
  db:
    user: "docker"
    password: "docker"

  s3:
    bucket: ""
    endpoint: ""
    region: ""
    accesskey: ""
    secretkey: ""
    storagePath: "/data"
    cloudfront:
      endpoint:
      keypair:
      privatekey:

  keys:
    cookie-secret:
    jwt-secret:
    service-api-key:
    api-vpn-service-api-key:
    registry-secret-key:
    token-auth-builder-token:
    token-auth-pub:
    token-auth-key:
    token-auth-kid:

  certificates:
    root:
      ca:
      crt:
      key:
    vpn:
      ca:
      ca-chain:
      crt:
      server-key:
      dh:

secrets:
  create: true

ingress:
  ingressClassName: openbalena-haproxy
  annotations: {}
  http:
    annotations: {}
  tunnel:
    annotations: {}
  vpn:
    annotations: {}

api:
  replicas: 1
  image:
    repository: balena/open-balena-api
    tag: "v0.194.0"
    pullPolicy: IfNotPresent

  labels: {}
  annotations: {}
  affinity: {}
  resources: {}
  nodeSelector: {}

  service:
    labels: {}
    annotations: {}
    externalIPs: []

  sentry-dsn: ""

vpn:
  replicas: 1
  image:
    repository: balena/open-balena-vpn
    tag: "v11.1.0"
    pullPolicy: IfNotPresent

  labels: {}
  annotations: {}
  affinity: {}
  resources: {}
  nodeSelector: {}

  service:
    labels: {}
    annotations: {}
    externalIPs: []

  sentry-dsn: ""

registry:
  replicas: 1
  image:
    repository: balena/open-balena-registry
    tag: "v2.24.2"
    pullPolicy: IfNotPresent

  disableRedirect: false

  labels: {}
  annotations: {}
  affinity: {}
  resources: {}
  nodeSelector: {}

  service:
    labels: {}
    annotations: {}
    externalIPs: []

s3:
  enabled: true
  replicas: 1
  image:
    repository: balena/open-balena-s3
    tag: "v2.13.3"
    pullPolicy: IfNotPresent

  labels: {}
  annotations: {}
  affinity: {}
  resources: {}
  nodeSelector: {}

  service:
    labels: {}
    annotations: {}
    externalIPs: []

  storage: "25Gi"
  storageClass:

db:
  replicas: 1
  image:
    repository: balena/open-balena-db
    tag: "v5.0.3"
    pullPolicy: IfNotPresent

  labels: {}
  annotations: {}
  affinity: {}
  resources: {}
  nodeSelector: {}

  service:
    labels: {}
    annotations: {}
    externalIPs: []

  storage: "10Gi"
  storageClass:

redis:
  replicas: 1
  image:
    repository: redis
    tag: "alpine"
    pullPolicy: IfNotPresent

  labels: {}
  annotations: {}
  affinity: {}
  resources: {}
  nodeSelector: {}

  service:
    labels: {}
    annotations: {}
    externalIPs: []

  storage: "10Gi"
  storageClass:

haproxy:
  controller:
    ingressClass: "openbalena-haproxy"
    ingressClassResource:
      enabled: true
    config:
      config-proxy: |-
          _front__tls
            # BEGIN::Redirect to openBalena VPN
            acl is_ssl req.ssl_ver 2:3.4
            use_backend {{ .Release.Namespace }}_openbalena-vpn_443 if !is_ssl
            # END::Redirect to openBalena VPN
